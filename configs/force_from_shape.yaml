# ===================================================================
# Pasternak Force Solver — 配置文件（Google 风格注释）
#
# 此配置同时服务于：
#   - tools/force_from_shape.py      从位移 w 反算 (Qx,Qy,R) 与 q
#   - 批量模式（目录扫描）/ 单文件模式
#
# 术语与单位：
#   E   [Pa]        弹性模量
#   nu  [-]         泊松比
#   h   [m]         板厚
#   Gp  [Pa·m]      Pasternak 剪切参数
#   k   [N/m^3]     Winkler 基床系数
#   a   [m]         正方形板边长；dx = a/(N-1)，N=网格点数(H=W)
#
# 输入/输出：
#   输入位移：w.npy，形状 (H, W)，单位 [m]
#   输出力场：forces_3ch.npy，形状 (H, W, 3)，通道 [Qx,Qy,R]
#              Qx,Qy [N/m]，R [N/m^2]
#   输出载荷：q.npy，形状 (H, W)，单位 [N/m^2]
#
# 运行示例（单文件）：
#   python tools/force_from_shape.py --config configs/force_from_shape.yaml --input ./w.npy
#
# 运行示例（批量）：
#   python tools/force_from_shape.py --config configs/force_from_shape.yaml \
#     --input-dir ./w_dir --recursive
#
# 重要说明：
#   - 本文件“仅注释优化”，所有数值与键名保持不变。
#   - 若 w 的边界不为 0，可设置 enforce_zero_boundary: true 提高稳定性。
# ===================================================================

# -----------------------------
# 材料与地基参数（单位见上）
# 对应脚本：compute_fields_from_shape() 中的 E, nu, h, Gp, k
# -----------------------------
E:   3.0e6      # 弹性模量 [Pa] ≈1.56 MPa（PDMS+铝粉1/30，体积分数≈1.4%）
nu: 0.47        # 泊松比 [-] 近不可压，数值计算更稳
h:  4.25e-3      # 板厚 [m] 3 mm

# 基底按软泡沫等效的Pasternak两参数（可据实际基底再标定）
Gp: 5.0      # Pasternak剪切参数 [Pa·m] ≈ G_f * t_f （E_f=50kPa, ν_f=0.30, t_f=10mm）
k:  1.0e6       # Winkler基床系数 [N/m^3] ≈ E_f/(1-ν_f^2)/t_f

# -----------------------------
# 几何参数
# -----------------------------
a: 1.4525e-2          # 正方形板边长 [m]；脚本内 dx = a/(N-1)，其中 N=H=W

# -----------------------------
# 输入（单文件与批量）
# -----------------------------
input_w_path: "./w.npy"    # 单文件模式：位移 w.npy 路径（形状 (H,W)，单位 [m]）

# 批量模式：在 input_dir 下按 input_glob 搜索位移文件（.npy），
# 每个文件都应为二维 (H,W) 数组；可递归。
input_dir: "./w_dir"       # 输入目录（批量）
input_glob: "*.npy"        # 匹配模式（当前实现为简单后缀/通配匹配）
recursive: true            # 是否递归子目录

# -----------------------------
# 输出
# -----------------------------
# 运行时会在 output_root 下生成时间戳子目录：
#   forces_out/run_YYYY-MM-DD_HH-MM-SS/<输入文件名去扩展名>/
# 目录内包含：
#   - forces_3ch.npy  (H,W,3)  通道 [Qx,Qy,R]
#   - q.npy           (H,W)
#   - meta.json       元数据（来源、参数、时间）
output_root: "./forces_out"

# 输出文件名（可改名；脚本根据文件名识别类型与避免回读）
output_forces_name: "forces_3ch.npy"   # 力场文件；Qx,Qy [N/m]，R [N/m^2]
output_q_name: "q.npy"                 # 外载荷文件；q [N/m^2]

# -----------------------------
# 可选行为
# -----------------------------
save_individual_channels: false  # 为兼容旧流程，可额外输出 Qx.npy/Qy.npy/R.npy 与 forces.npz


# 轻处理 → 控制 Qx/Qy/R
pre_smooth_sigma: 2.0
downsample_stride: 3
downsample_mode: mean
upsample_back: true          # 保证输出维持 256×256

# 强处理 → 只作用于 q 计算
q_pre_smooth_sigma: 6.0      # q 的高斯平滑（像素）
q_downsample_stride: 7       # q 的下采样倍数
q_downsample_mode: mean
q_fft_lowpass_ratio: 0.15    # 频域低通，0 关闭；建议 0.12~0.2
q_fft_lowpass_soft: true     # 余弦过渡

# 如不确定单位：w_scale_to_m: 1e-6   # 如果你的 w 是“微米”
